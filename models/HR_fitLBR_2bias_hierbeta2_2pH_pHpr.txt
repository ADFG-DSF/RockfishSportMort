
model{
 tau_comp <- 1 / sd_comp / sd_comp
 sd_comp ~ dunif(0, 10)
 
 for (s in 1:2){
  tau_pH[s] <- 1 / sd_pH[s] / sd_pH[s]
  sd_pH[s] ~ dunif(0, 10)
 }
   
 for(n in 1:N){ #composition likelihoods; comp_ denoted by x_ayu in rmarkdown...
  comp_pelagic[n] ~ dbin(p_pelagic[comp_area[n], comp_year[n], comp_user[n] + 1], comp_N[n])
  comp_black[n] ~ dbin(p_black[comp_area[n], comp_year[n] , comp_user[n] + 1], comp_pelagic[n])
  ### p_yellow harvested = creel data
  comp_yellow[n] ~ dbin(p_yellow[comp_area[n], comp_year[n], comp_user[n] + 1], comp_N[n] - comp_pelagic[n])
    }

 for(r in 1:3){ #priors for mean composition & proportion harvested
  mu_beta0_pelagic[r] ~ dnorm(0, 0.1) #dnorm(0, 0.001)
  tau_beta0_pelagic[r] ~ dgamma(0.01, 0.01)
  mu_beta0_yellow[r] ~ dnorm(0, 0.5) #dnorm(0, 0.001)
  tau_beta0_yellow[r] ~ dgamma(0.01, 0.01)
  mu_beta0_black[r] ~ dnorm(0, 0.1) #dnorm(0, 0.001)
  tau_beta0_black[r] ~ dgamma(0.01, 0.01)

##  mu_beta2_pelagic[r] ~ dnorm(0, 0.1) #dnorm(0, 0.001)
##  tau_beta2_pelagic[r] ~ dgamma(0.1, 0.1)
##  mu_beta2_yellow[r] ~ dnorm(0, 0.1) #dnorm(0, 0.001)
##  tau_beta2_yellow[r] ~ dgamma(0.1, 0.1)
##  mu_beta2_black[r] ~ dnorm(0, 0.1) #dnorm(0, 0.001)
##  tau_beta2_black[r] ~ dgamma(0.1, 0.1)

##  for (s in 1:2){
##    mu_beta0_pH[r,s] ~ dnorm(-0.25, 0.25) #dnorm(0, 0.001)
##    tau_beta0_pH[r,s] ~ dgamma(0.01, 0.01)
##    }  

  mu_beta0_pH[r,1] ~ dnorm(0, 0.25) #dnorm(0, 0.001)
  tau_beta0_pH[r,1] ~ dgamma(0.01, 0.01)

  mu_beta0_pH[r,2] ~ dnorm(1, 0.25) #dnorm(0, 0.001) #high retention of YE at start
  tau_beta0_pH[r,2] ~ dgamma(0.01, 0.01)
  }

## for SOUTHEAST only
  mu_beta0_yellow_x ~ dnorm(0.25, 0.5) #dnorm(0, 0.001)
  tau_beta0_yellow_x ~ dgamma(0.01, 0.01)
  mu_beta2_yellow_x ~ dnorm(-1, 0.5) #dnorm(0, 0.001)
  tau_beta2_yellow_x ~ dgamma(0.1, 0.1)

 for (a in 1:A){
  # SWHS H bias: need separate bias for C based on logbook R estimates 
  mu_bc_H[a] ~ dnorm(0, 0.001) #T(,10)              # mean log bias in SWHS H estimates
  tau_bc_H[a] <- 1 / sd_bc_H[a] / sd_bc_H[a]    # transformed sigma in mean log bias 
  sd_bc_H[a] ~ dgamma(2, 2) #dunif(0, 10)                 # sigma mean log bias 

  mu_bc_R[a] ~ dnorm(0, 0.001) #T(,10)              # mean log bias in SWHS H estimates
  tau_bc_R[a] <- 1 / sd_bc_R[a] / sd_bc_R[a]    # transformed sigma in mean log bias 
  sd_bc_R[a] ~ dgamma(2, 2) #dunif(0, 10)                 # sigma mean log bias

  #User proportions. 
  b1_pG[a] ~ dunif(1, 50)                 # beta1 for user proportion (Puser)
  b2_pG[a] ~ dunif(1, 50)                 # beta2 for user proportion (Puser)

  #proportion of catch that is harvested
  for (s in 1:2){ #s = 1= pelagic, s = 2 = yelloweye
    beta0_pH[a,s] ~ dnorm(mu_beta0_pH[regions[a],s], tau_beta0_pH[regions[a],s])T(-2.75,) #INTERCEPT
##    beta1_pH[a,s] ~ dnorm(0, 0.1)T(0,)        # SCALING FACTOR (amplitude)
##    beta2_pH[a,s] ~ dnorm(0.5, 0.1) #T(0,)          # SLOPE #dnorm(0.5, 5) #T(0,)
    beta3_pH[a,s] ~ dnorm(30, 0.01)T(19,Y-3)     # INFLECTION POINT
    beta4_pH[a,s] ~ dnorm(0, 0.1)               # USER EFFECT
  }

  #BRF pH parameters
  beta1_pH[a,1] ~ dnorm(0, 0.1)T(0,)        # SCALING FACTOR (amplitude)
  beta2_pH[a,1] ~ dnorm(0.1, 0.1) #T(0,)          # SLOPE #dnorm(0.5, 5) #T(0,)

  #YE pH parameters
  beta1_pH[a,2] ~ dnorm(0, 0.01)T(0,)        # SCALING FACTOR (amplitude)
  beta2_pH[a,2] ~ dnorm(-0.5, 0.1) #T(0,)          # SLOPE #dnorm(0.5, 5) #T(0,)

  # logit parameters for proportion estimates defined by mean, temp slope and private angler effect. 
  beta0_pelagic[a] ~ dnorm(mu_beta0_pelagic[regions[a]], tau_beta0_pelagic[regions[a]])T(-5,)
  beta1_pelagic[a] ~ dnorm(0, 0.1)T(0,)
  ##  beta2_pelagic[a] ~ dnorm(mu_beta2_pelagic[regions[a]], tau_beta2_pelagic[regions[a]]) #T(-10,10)
  beta2_pelagic[a] ~ dnorm(0, 0.1)T(-10,10)
  beta3_pelagic[a] ~ dnorm(30, 0.05)T(19,Y-5) 
  beta4_pelagic[a] ~ dnorm(0, 0.1)

  beta0_yellow[a] ~ dnorm(mu_beta0_yellow[regions[a]], tau_beta0_yellow[regions[a]])T(-5,)
  beta1_yellow[a] ~ dnorm(0, 0.1)T(0,)
  ##  beta2_yellow[a] ~ dnorm(mu_beta2_yellow[regions[a]], tau_beta2_yellow[regions[a]]) #T(-10,10)
  beta2_yellow[a] ~ dnorm(0, 0.1)T(-10,10)
##  beta3_yellow[a] ~ dnorm(30, 0.05)T(19,Y-5)  
  beta4_yellow[a] ~ dnorm(0, 0.1) # for logistic curve

  beta0_black[a] ~ dnorm(mu_beta0_black[regions[a]], tau_beta0_pelagic[regions[a]])T(-5,)
  beta1_black[a] ~ dnorm(0, 0.1)T(0,)
  ##  beta2_black[a] ~ dnorm(mu_beta2_black[regions[a]], tau_beta2_pelagic[regions[a]]) #T(-10,10)
  beta2_black[a] ~ dnorm(0, 0.1)T(-10,10)
##  beta3_black[a] ~ dnorm(30, 0.005)T(19,Y-1)
  beta4_black[a] ~ dnorm(0, 0.1)
	
  for(y in 35:Y){ #guided SWHS harvest likelihood
   tauHhat_ayg[a, y] <- 1 / log(cvHhat_ayg[a, y] * cvHhat_ayg[a, y] + 1)
   Hhat_ayg[a, y] ~ dlnorm(logHhat_ay[a, y] + log(pG[a, y]), tauHhat_ayg[a, y])
  }

  for(y in 35:Y){ #guided SWHS release likelihood
   tauRhat_ayg[a, y] <- 1 / log(cvRhat_ayg[a, y] * cvRhat_ayg[a, y] + 1)
   logRhat_ayg[a, y] <- log(R_ayg[a, y]) + logbc_R[a, y] 
   Rhat_ayg[a, y] ~ dlnorm(logRhat_ayg[a, y], tauRhat_ayg[a, y])
  }

  for (y in 14:Y){ #all user SWHS release likelihood
   tauRhat_ay[a, y] <- 1 / log(cvRhat_ay[a, y] * cvRhat_ay[a, y] + 1)
   logRhat_ay[a, y] <- log(R_ay[a, y]) + logbc_R[a, y]
   Rhat_ay[a, y] ~ dlnorm(logRhat_ay[a, y], tauRhat_ay[a, y])
  }

  for(y in 22:Y){ #logbook likelihood; guided harvest by area and year
   Hlb_ayg[a, y] ~ dpois(H_ayg[a, y])   # all rockfish
   Hlbp_ayg[a, y] ~ dpois(H_ayg[a, y] * p_pelagic[a, y, 1]) #pelagic rockfish
  } 

#logbook release data censored for total and pelagic; modelled as minimal estimates
  for (y in 23:Y) { #logbook likelihood; guided release by area and year
    Rlb_ayg[a, y] ~ dpois(R_ayg[a,y])  
    Rlbp_ayg[a, y] ~ dpois(R_ayg[a, y] * p_pelagic[a, y, 1])  
  }
  
  for(y in 30:Y){ #logbook likelihood; guided yelloweye harvest and release by area and year also censored
   Hlby_ayg[a, y] ~ dpois(Hy_ayg[a, y])
   Rlby_ayg[a, y] ~ dpois(Ry_ayg[a, y])
  }
	
  for(y in 1:Y){
   #SWHS total likelihood 
   tauHhat_ay[a, y] <- 1 / log(cvHhat_ay[a, y] * cvHhat_ay[a, y] + 1)
   Hhat_ay[a, y] ~ dlnorm(logHhat_ay[a, y], tauHhat_ay[a, y])
   logHhat_ay[a, y] <- logH_ay[a, y] + logbc_H[a, y]
   logH_ay[a, y] ~ dnorm(Htrend_ay[a, y], prec_H[a])
   Htrend_ay[a, y] <- Z[y, ] %*% beta_H[a, 1:C]   # Harvest temproal trend defined by penalized spline 

   #Harvest
   H_ayg[a, y] <- H_ay[a, y] * pG[a, y] #H_ay[a, y] * pG[a, y] # guided harvests
   H_ayu[a, y] <- H_ay[a, y] * (1 - pG[a, y])  # unguide harvests
   H_ay[a, y] <- exp(logH_ay[a, y])               # total harvest parameter

   #Catches
   C_ayg[a, y] <- H_ayg[a, y] + R_ayg[a, y]      # guided catches
   C_ayu[a, y] <- H_ayu[a, y] + R_ayu[a, y]      # unguide catches
   C_ay[a, y] <- C_ayg[a, y] + C_ayu[a, y]      # total catch parameter
   
   #Total releases
   pHg[a,y] <- (pH[a,y,1,1] * H_ayg[a,y] * p_pelagic[a, y, 1] + pH[a,y,1,2] * Hy_ayg[a,y]) / (H_ayg[a,y] * p_pelagic[a, y, 1] + Hy_ayg[a,y])
   pHu[a,y] <- (pH[a,y,2,1] * H_ayu[a,y] * p_pelagic[a, y, 2] + pH[a,y,2,2] * Hy_ayu[a,y]) / (H_ayu[a,y] * p_pelagic[a, y, 2] + Hy_ayu[a,y])
   R_ayg[a, y] <- (H_ayg[a, y] / pHg[a,y]) - H_ayg[a, y]   #get rid of pG_R!!!      
   R_ayu[a, y] <- (H_ayu[a, y] / pHu[a,y]) - H_ayu[a, y]
   R_ay[a, y] <- R_ayg[a, y] + R_ayu[a, y] #exp(logR_ay[a, y])               

   #Black rockfish
   Hb_ayg[a, y] <- H_ayg[a, y] * p_pelagic[a, y, 1] * p_black[a, y, 1]
   Hb_ayu[a, y] <- H_ayu[a, y] * p_pelagic[a, y, 2] * p_black[a, y, 2]
   Hb_ay[a, y] <- Hb_ayg[a, y] + Hb_ayu[a, y]

   Cb_ayg[a, y] <- Hb_ayg[a, y] + Rb_ayg[a, y]
   Cb_ayu[a, y] <- Hb_ayu[a, y] + Rb_ayu[a, y]
   Cb_ay[a, y] <- Cb_ayg[a, y] + Cb_ayu[a, y]

   Rb_ayg[a, y] <- (H_ayg[a, y] / pH[a,y,1,1]) - H_ayg[a, y]  #R_ayg[a, y] * p_pelagic[a, y, 1] * p_black[a, y, 1] 
   Rb_ayu[a, y] <- (H_ayu[a, y] / pH[a,y,2,1]) - H_ayu[a, y]  #R_ayu[a, y] * p_pelagic[a, y, 2] * p_black[a, y, 2]
   Rb_ay[a, y] <- Rb_ayg[a, y] + Rb_ayu[a, y]

   #Yelloweye rockfish
   Hy_ayg[a, y] <- H_ayg[a, y] * (1 - p_pelagic[a, y, 1]) * p_yellow[a, y, 1]
   Hy_ayu[a, y] <- H_ayu[a, y] * (1 - p_pelagic[a, y, 2]) * p_yellow[a, y, 2]
   Hy_ay[a, y] <- Hy_ayg[a, y] + Hy_ayu[a, y]

   Cy_ayg[a,y] <- Hy_ayg[a, y] + Ry_ayg[a,y]
   Cy_ayu[a,y] <- Hy_ayu[a, y] + Ry_ayu[a,y]
   Cy_ay[a, y] <- Cy_ayg[a, y] + Cy_ayu[a, y]

   Ry_ayg[a, y] <- (Hy_ayg[a, y] / pH[a,y,1,2]) - Hy_ayg[a, y]  #R_ayg[a, y] * (1 - p_pelagic[a, y, 1]) * p_yellow[a, y, 1]
   Ry_ayu[a, y] <- (Hy_ayg[a, y] / pH[a,y,2,2]) - Hy_ayg[a, y]  #R_ayu[a, y] * (1 - p_pelagic[a, y, 2]) * p_yellow[a, y, 2]
   Ry_ay[a, y] <- Ry_ayg[a, y] + Ry_ayu[a, y]

   #SWHS Bias and user comp
   logbc_H[a, y] ~ dnorm(mu_bc_H[a], tau_bc_H[a])T(-20,3)     # mean log bias in SWHS H estimates
   logbc_R[a,y] ~ dnorm(mu_bc_R[a], tau_bc_R[a])

   pG[a, y] ~ dbeta(b1_pG[a], b2_pG[a])         # P(user)ay1 = frac of harv taken by charter anglers
   } #END EVERY YEAR

  ##phi_pH <- 100 #~ dgamma(1, 0.1)

  for (y in 1:Y) {
   #Composition logistic regression and pH logistic regression
   for(u in 1:2){
    #Proportion harvested: 
    for (s in 1:2) {
      logit(mu_pH[a, y, u, s]) <- re_pH[a, y, u, s] + beta0_pH[a,s] + 
                                     beta1_pH[a,s] / (1 + exp(-beta2_pH[a,s] * (y - beta3_pH[a,s]))) + 
                                     beta4_pH[a,s] * (u - 1)
      re_pH[a, y, u, s] ~ dnorm(0, tau_pH[s])

      #pH[a, y, u, s] ~ dbeta(mu_pH[a, y, u, s] * phi_pH, 
      #                        (1 - mu_pH[a, y, u, s]) * phi_pH)

      pH[a, y, u, s] ~ dbeta(mu_pH[a, y, u, s] * 100, 
                              (1 - mu_pH[a, y, u, s]) * 100)
    }
    
    #Species composition: 
    logit(p_pelagic[a, y, u]) <- re_pelagic[a, y, u] + beta0_pelagic[a] + 
                                     beta1_pelagic[a] / (1 + exp(-beta2_pelagic[a] * (y - beta3_pelagic[a]))) + beta4_pelagic[a] * (u - 1)

    logit(p_yellow[a, y, u]) <- re_yellow[a, y, u] + beta0_yellow[a] + 
                                     beta1_yellow[a] / (1 + exp(-beta2_yellow[a] * (y - beta3_yellow[a]))) + 
                                     beta4_yellow[a] * (u - 1)

    logit(p_black[a, y, u]) <- re_black[a, y, u] + beta0_black[a] + 
                                     beta1_black[a] / (1 + exp(-beta2_black[a] * (y - beta3_black[a]))) + 
                                     beta4_black[a] * (u - 1)

    re_black[a, y, u] ~ dnorm(0, tau_comp)    # random effects
    re_pelagic[a, y, u] ~ dnorm(0, tau_comp)
    re_yellow[a, y, u] ~ dnorm(0, tau_comp)
   }
  }

 #Spline parameters
 prec_H[a] <- pow(sigma_H[a], -2)
 sigma_H[a] ~ dnorm(0.25,1)T(0.00001,10) #~ dnorm(0,1)T(0.00001,10) #<- 0.25 
 beta_H[a, 1:C] ~ dmnorm(zero[1:C] + beta0_H[a], lambda_H[a] * Q[1:C, 1:C])
 gamma_H[a, 1:C] <- beta_H[a, 1:C] - beta0_H[a]
 beta0_H[a] ~ dnorm(0, 1e-6)

 #Lambda hierarchichal approach: smoothing penalty
 #lambda_H[a] ~ dgamma(1, 1) #dgamma(0.001, 0.001)
 #lambda_H[a] ~ dgamma(alpha_lambda_H, beta_lambda_H)
 lambda_H[a] ~ dgamma(alpha_lambda_H[regions[a]], beta_lambda_H[regions[a]])
 }

# Different bounded priors for inflection point of curve to keep it withing the
# the time period of observations
# Also, here is where we set the pH priors for YE and BRF:
 #Kodiak and Southcentral:
 for (a in 1:10) {
 beta3_yellow[a] ~ dnorm(30, 0.05)T(19,Y-5)
 beta3_black[a] ~ dnorm(30, 0.005)T(19,Y-1)

  for (u in 1:2){
    for (y in 1:Y){
      mu_pH[a, y, u, 1] ~ dbeta(1, 1) #ininformative for BRF
    }
    for (y in 1:36){
      mu_pH[a, y, u, 2] ~ dbeta(4, 1.5) #informative for YE
    }
    for (y in 37:Y){
      mu_pH[a, y, u, 2] ~ dbeta(1, 1) #informative for YE
    }
  }
 } 

 #Southeast:
 for (a in 11:16) {
 # p_yellow for southeast retention closures; just do for SE areas 11,12,13,14,15,16
  beta3_yellow[a] ~ dnorm(30, 0.05)T(29,Y-5)
  beta3_black[a] ~ dnorm(30, 0.005)T(29,Y-1)

  for (u in 1:2){
    for (y in 1:Y){
      mu_pH[a, y, u, 1] ~ dbeta(1, 1) #ininformative for BRF
    }
    for (y in 1:43){
      mu_pH[a, y, u, 2] ~ dbeta(4, 1.5) #informative for YE
    }
    for (y in 44:Y){
      mu_pH[a, y, u, 2] ~ dbeta(1e-6, 1) #informative for YE
    }
  }
 }
 
#hierarchichal lambda stuff: 
# 2 options:
## Regional hyperpriors:
for (r in 1:3){
 alpha_lambda_H[r] <- pow(mu_lambda_H[r], 2) / pow(sigma_lambda_H[r], 2)
 beta_lambda_H[r] <- mu_lambda_H[r] / pow(sigma_lambda_H[r], 2)
 mu_lambda_H[r] ~ dnorm(1, 0.1)  # dnorm(0.5, 0.1) = weaker smoothing; (1,0.1)=more smoothing.
 sigma_lambda_H[r] ~ dunif(0, 20) #dt(0, 1, 1) T(0, ) # dunif(0, 20) # 
}
}